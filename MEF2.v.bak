module MEF2 ( input CLK, input reset, input asp, input got, output Led1, output Led2);

	parameter NADA = 2'b00;
	parameter ASP = 2'b01;
	parameter GOT = 2'b10;
	
	reg [2:0] state, nextstate;
	
	always @(posedge newclk4, posedge reset)
	if (reset) state <= NADA;
	else state <= nextstate;
	
	always @(*)
	case (state)
		NADA: if (asp & ~got) nextstate = ASP;
		else if (~asp & got) nextstate = GOT;
		else nextstate = NADA;
		ASP: if (~asp & ~got) nextstate = NADA;
		else if (~asp & got) nextstate = GOT;
		else nextstate = ASP;
		GOT: if (~asp & ~got) nextstate = NADA;
		else if (asp & ~got) nextstate = ASP;
		else nextstate = GOT;
		default: nextstate = NADA;
	endcase
	assign Led1 = (state == GOT);
	assign Led2 = (state == ASP);
	
endmodule  